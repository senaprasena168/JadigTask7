generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?
  password      String?
  provider      String?   @default("email")
  isAdmin       Boolean   @default(false)
  isVerified    Boolean   @default(true)
  otpCode       String?
  otpExpiry     DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  price       Decimal   @db.Decimal(10, 2)
  description String?
  imageUrl    String?   @db.VarChar(500)
  category    String?   @db.VarChar(100)
  inStock     Boolean   @default(true)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt

  @@map("products")
}
