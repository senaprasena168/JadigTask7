/* BACKUP - Original Toast notification styles - compact and lightweight with spinning lights */

/* This file contains the original custom spinning light implementation for the Toast component.
   It has been replaced by the modular SpinLightContainer component.
   
   Original Features:
   - 9 animation containers (toastContainer, toastBox, toastContent, gradientContainer, 
     gradientBox1, gradientBox2, redGradientContainer, redGradientBox1, redGradientBox2)
   - Complex animation sequences with multiple states
   - Custom gradient animations and rotations
   - Type-specific styling for success, error, warning, info
   
   Date Backed Up: 2025-08-02
   Reason: Replaced with SpinLightContainer implementation
*/

/* Base positioning for toast container */
.toastContainer {
  position: fixed;
  top: 4rem;
  left: 50%;
  transform: translate(-50%, 0);
  z-index: 50;
  max-width: fit-content;
}

.toastBox {
  position: relative;
  background: transparent;
  border-radius: 12px;
  transition: all 0.5s ease-in-out;
  overflow: hidden;
  min-width: 300px;
  max-width: 400px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.toastBox.shrunk {
  width: fit-content;
  min-width: 100px;
  max-width: 140px;
  height: 50px;
}

.toastBox.expanded {
  width: 300px;
  height: 80px;
}

.toastContent {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 8px 16px;
  transition: all 0.5s ease-in-out;
  z-index: 2;
}

.toastContent.shrunk {
  padding: 6px 10px;
  gap: 4px;
  width: fit-content;
}

.toastContent.expanded {
  padding: 12px 20px;
  gap: 12px;
}

.toastIcon {
  font-size: 1.2em;
  transition: all 0.3s ease-in-out;
  flex-shrink: 0;
}

.toastIcon.success {
  color: #00ff88;
}

.toastIcon.error {
  color: #ff4444;
}

.toastIcon.warning {
  color: #ffaa00;
}

.toastIcon.info {
  color: #00ccff;
}

.toastMessage {
  color: #ffffff;
  font-weight: 600;
  margin: 0;
  line-height: 1.2;
  transition: all 0.3s ease-in-out;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.toastMessage.shrunk {
  font-size: 0.85em;
  max-width: none;
  width: fit-content;
}

.toastMessage.expanded {
  font-size: 0.95em;
  max-width: none;
}

/* Subtle gradient border effect */
.toastBox::before {
  content: '';
  position: absolute;
  inset: 0;
  padding: 1px;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.2) 0%,
    rgba(255, 255, 255, 0.05) 50%,
    rgba(255, 255, 255, 0.1) 100%
  );
  border-radius: inherit;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask-composite: xor;
  z-index: 1;
}

/* Success type specific styling */
.toastBox.success::before {
  background: linear-gradient(
    135deg,
    rgba(0, 255, 136, 0.3) 0%,
    rgba(0, 255, 136, 0.1) 50%,
    rgba(0, 255, 136, 0.2) 100%
  );
}

/* Error type specific styling */
.toastBox.error::before {
  background: linear-gradient(
    135deg,
    rgba(255, 68, 68, 0.3) 0%,
    rgba(255, 68, 68, 0.1) 50%,
    rgba(255, 68, 68, 0.2) 100%
  );
}

/* Warning type specific styling */
.toastBox.warning::before {
  background: linear-gradient(
    135deg,
    rgba(255, 170, 0, 0.3) 0%,
    rgba(255, 170, 0, 0.1) 50%,
    rgba(255, 170, 0, 0.2) 100%
  );
}

/* Info type specific styling */
.toastBox.info::before {
  background: linear-gradient(
    135deg,
    rgba(0, 204, 255, 0.3) 0%,
    rgba(0, 204, 255, 0.1) 50%,
    rgba(0, 204, 255, 0.2) 100%
  );
}

/* Hover effect for expanded state */
.toastBox.expanded:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
}

/* Spinning light animations */
@keyframes rotating {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(-360deg);
  }
}

@keyframes rotating-perpendicular {
  0% {
    transform: translate(-50%, -50%) rotate(90deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(-270deg);
  }
}

/* Blue gradient container */
.gradientContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 15px;
  height: 60px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0;
  z-index: 1;
  transition: width 0.5s ease-in-out, height 0.5s ease-in-out;
  animation: rotating-perpendicular 4s linear infinite;
  animation-delay: -1s;
}

.gradientContainer.expanded {
  width: 40px;
  height: 200px;
}

.gradientBox {
  width: 100%;
  height: 50%;
  border-radius: 0;
}

.gradientBox1 {
  position: relative;
  background: linear-gradient(
    to right,
    rgb(0, 150, 255) 0%,
    rgb(50, 50, 50) 100%
  );
}

.gradientBox1::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  border-radius: 12px;
  filter: drop-shadow(-8px 8px 25px rgba(0, 150, 255, 0.4));
  z-index: -1;
}

.gradientBox2 {
  position: relative;
  background: linear-gradient(
    to left,
    rgb(0, 150, 255) 0%,
    rgb(50, 50, 50) 100%
  );
}

.gradientBox2::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  border-radius: 12px;
  filter: drop-shadow(-8px 8px 25px rgba(0, 150, 255, 0.4));
  z-index: -1;
}

/* Red gradient container */
.redGradientContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 15px;
  height: 60px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0;
  z-index: 1;
  transition: width 0.5s ease-in-out, height 0.5s ease-in-out;
  animation: rotating 4s linear infinite;
  animation-delay: -1s;
}

.redGradientContainer.expanded {
  width: 40px;
  height: 200px;
}

.redGradientBox {
  width: 100%;
  height: 50%;
  border-radius: 0;
}

.redGradientBox1 {
  position: relative;
  background: linear-gradient(
    to right,
    rgb(255, 50, 150) 0%,
    rgb(80, 20, 20) 100%
  );
}

.redGradientBox1::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  border-radius: 12px;
  filter: drop-shadow(-8px 8px 25px rgba(255, 50, 150, 0.4));
  z-index: -1;
}

.redGradientBox2 {
  position: relative;
  background: linear-gradient(
    to left,
    rgb(255, 50, 150) 0%,
    rgb(80, 20, 20) 100%
  );
}

.redGradientBox2::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: inherit;
  border-radius: 12px;
  filter: drop-shadow(-8px 8px 25px rgba(255, 50, 150, 0.4));
  z-index: -1;
}

/* Content background */
.toastContent::before {
  content: '';
  position: absolute;
  inset: 2px;
  background: rgba(45, 45, 45, 0.95);
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  z-index: -1;
}

/* Animation keyframes */
@keyframes slideDown {
  from {
    transform: translate(-50%, -400px);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translate(-50%, 0);
    opacity: 1;
  }
  to {
    transform: translate(-50%, -400px);
    opacity: 0;
  }
}

.toastBox.sliding-down {
  animation: slideDown 0.5s ease-out;
}

.toastBox.sliding-up {
  animation: slideUp 0.5s ease-in;
}

/* Animation states */
.toastContainer.hidden {
  transform: translate(-50%, -400px);
  opacity: 0;
}

.toastContainer.visible {
  transform: translate(-50%, 0);
  opacity: 1;
  transition: all 0.5s ease-in-out;
}

.toastContainer.slidingUp {
  transform: translate(-50%, -400px);
  opacity: 0;
  transition: all 0.5s ease-in-out;
}